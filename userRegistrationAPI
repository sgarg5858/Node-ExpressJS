const express= require('express');
const router=express.Router();
const {check,validationResult} = require('express-validator');
const User= require('../../models/User');
const gravatar = require('gravatar');
const bcyrpt = require('bcryptjs');

//Register User
router.post('/', [
    check('name','Name is Required').not().isEmpty(),
    check('email',' Please Enter  Valid Email').isEmail(),
    check('password','Password should contain min 6 characters').isLength({min:6})
],async (req,res,next) => 
{
    const errors=validationResult(req);
    if(!errors.isEmpty())
    {
        return res.status(400).json({errors:errors.array()})
    }

    const{name,email,password}=req.body;

    try{
         //see if user already exists
        let user = await User.findOne({email:email});
        if(user)
        {
           return res.status(400).json({errors: [{ msg :'User already Exists'}]});
        }
         //get user gravatar
         const avatar = gravatar.url(email,{
             s:'200',
             r:'pg',
             d:'mm'
         });
         user= new User({name,email,avatar,password});

        //encyrpt password
        const salt= await bcyrpt.genSalt(10);

        user.password = await bcyrpt.hash(password,salt);

        await user.save();

        res.send('User Registered');
    }catch(err){
        console.log(err.message);
        res.status(500).send('Server Error');
    }  
});

module.exports=router;
